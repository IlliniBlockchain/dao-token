// SPDX-License-Identifier: GPL-3.0-or-later
pragma solidity ^0.8.6;

import "ds-test/test.sol";
import "./test/Vm.sol";

import "./IlliniBlockchainSP22Token.sol";

contract IlliniBlockchainSP22TokenTest is DSTest {
    Vm vm = Vm(HEVM_ADDRESS);
    IlliniBlockchainSP22Token token;
    address owner = address(0x01);

    function setUp() public {
        token = new IlliniBlockchainSP22Token(owner);
    }

    function testFail_basic_sanity() public {
        assertTrue(false);
    }

    function test_basic_sanity() public {
        assertTrue(true);
    }

    function test_mint() public {
        uint256 id = 1;
        uint256 amount = 100;
        bytes memory data = bytes("");
        IlliniBlockchainSP22Token.TokenMetadata memory meta = IlliniBlockchainSP22Token
            .TokenMetadata({
                year: 2022,
                termId: 1 // Spring
            });
        vm.prank(owner);
        token.mint(owner, id, amount, meta, data);

        assertEq(token.balanceOf(owner, id), amount);

        (uint16 year, uint8 termId) = token.tokenMetadata(id);
        assertEq(year, meta.year);
        assertEq(termId, meta.termId);
    }

    function test_contractURI() public {
        assertEq(
            token.contractURI(),
            "data:application/json;base64,eyJuYW1lIjoiSWxsaW5pQmxvY2tjaGFpbiIsImRlc2NyaXB0aW9uOiJTdHVkZW50IG9yZ2FuaXphdGlvbiBhdCB0aGUgVW5pdmVyc2l0eSBvZiBJbGxpbm9pcyBhdCBVcmJhbmEtQ2hhbXBhaWduLiIsImV4dGVybmFsX2xpbmsiOiAiaHR0cHM6Ly9pbGxpbmlibG9ja2NoYWluLmNvbS8iLCJpbWFnZSI6ICJkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUIzYVdSMGFEMG5NelV3SnlCb1pXbG5hSFE5SnpJd01DY2dlRzFzYm5NOUoyaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREF2YzNabkp5QjJhV1YzUW05NFBTY3dJREFnTXpVd0lESXdNQ2NnYzNSNWJHVTlKMkpoWTJ0bmNtOTFibVF0WTI5c2IzSTZkMmhwZEdVblBqeGtaV1p6UGp4emRIbHNaVDR1WVh0bWFXeHNPbTV2Ym1VN2MzUnliMnRsT2lNeU16Rm1NakE3YzNSeWIydGxMWGRwWkhSb09qSndlSDB1WW50bWFXeHNPaU5tWm1ZN1ptOXVkQzFtWVcxcGJIazZKME52ZFhKcFpYSWdUbVYzSnl4dGIyNXZjM0JoWTJVN1ptOXVkQzF6YVhwbE9qRTRjSGg5UEM5emRIbHNaVDQ4TDJSbFpuTStQSEJoZEdnZ1kyeGhjM005SjJFbklHUTlKMDAxTmk0eklEZzBZekl1TWkwM0lETTRMalF0TVRjdU5DQTBNQzB4TlM0elRURXdOUzQySURjNExqTmpNUzR4SURFdU5TMHhPQzR4SURNekxqWXRNalF1T0NBek5FMHhOekV1TlNBek1DNDJZeTB4TGpnZ09TNHpMVEk1TGpnZ01qSXVOaTB6TVNBeE9TNDNUVEV4TkM0MElESTRMalpqTFM0MkxURXVPU0F6TVM0MUxURTRMallnTXpndU5DMHhOUzR5VFRVMkxqSWdNVE16TGpoak1TNHpJREV1TXkweU1DNDRJREk1TGpZdE1qZ3VOU0F6TUUwMUxqRWdNVE01TGpkak1TNDNMVGt1TVNBek1DMHlNaTQzSURNeExqTXRNVGt1T1NjdlBqeHdZWFJvSUdROUowMDNNeUF4TXpRdU1uTXRNemN1TkM0eUxUTTNMak1nTUdNd0lEQXRMakl0TXpjdU5DQXdMVE0zTGpRZ01DQXdJRE0zTGpRdExqSWdNemN1TXlBd0lEQWdNQ0F1TWlBek55NDBJREFnTXpjdU5Ib25QanhoYm1sdFlYUmxJR0YwZEhKcFluVjBaVTVoYldVOUoyWnBiR3duSUhaaGJIVmxjejBuSXpFd01qSXpaRHNqWTJRME5UTXhPeU14TURJeU0yUW5JR1IxY2owbk9ITW5JSEpsY0dWaGRFTnZkVzUwUFNkcGJtUmxabWx1YVhSbEp5OCtQQzl3WVhSb1BqeHdZWFJvSUdROUowMDNNeUE1Tmk0Mll5MHVNeTB1TkNBeE1DNDBMVEV6TGpNZ09DNDFMVEV6TGpNdExqTXVNaTB6Tmk0NExTNDNMVE0zTFM0eWJDMDRMamNnTVRNdU5HTXVNaTQ0Sno0OFlXNXBiV0YwWlNCaGRIUnlhV0oxZEdWT1lXMWxQU2RtYVd4c0p5QjJZV3gxWlhNOUp5TXhaVFExTjJJN0kyVTROemcyTnpzak1XVTBOVGRpSnlCa2RYSTlKemh6SnlCeVpYQmxZWFJEYjNWdWREMG5hVzVrWldacGJtbDBaU2N2UGp3dmNHRjBhRDQ4Y0dGMGFDQmtQU2ROTnpNdU1pQXhNek11T0d3NExqWXRNVFl1TjFZNE15NDJZeTB1TVMwdU15MDRMallnTVRNdU1pMDRMamNnTVRNdU1TYytQR0Z1YVcxaGRHVWdZWFIwY21saWRYUmxUbUZ0WlQwblptbHNiQ2NnZG1Gc2RXVnpQU2NqTVdZek1UWXhPeU5sTVRSbE16ZzdJekZtTXpFMk1TY2daSFZ5UFNjNGN5Y2djbVZ3WldGMFEyOTFiblE5SjJsdVpHVm1hVzVwZEdVbkx6NDhMM0JoZEdnK1BIQmhkR2dnWkQwblRURXpNeTR4SURReExqWmpMUzR6TFM0MElERXdMalF0TVRNdU15QTRMalV0TVRNdU15MHVNeTR5TFRNMkxqZ3RMamN0TXpjdExqSnNMVGd1TnlBeE15NDBZeTR5TGpnblBqeGhibWx0WVhSbElHRjBkSEpwWW5WMFpVNWhiV1U5SjJacGJHd25JSFpoYkhWbGN6MG5JMlU0TnpnMk56c2pNV1UwTlRkaU95TmxPRGM0TmpjbklHUjFjajBuT0hNbklISmxjR1ZoZEVOdmRXNTBQU2RwYm1SbFptbHVhWFJsSnk4K1BDOXdZWFJvUGp4d1lYUm9JR1E5SjAweE16TWdOemt1TW5NdE16Y3VOQzR5TFRNM0xqTWdNR013SURBdExqSXRNemN1TkNBd0xUTTNMalFnTUNBd0lETTNMalF0TGpJZ016Y3VNeUF3SURBZ01DQXVNaUF6Tnk0MElEQWdNemN1TkhvblBqeGhibWx0WVhSbElHRjBkSEpwWW5WMFpVNWhiV1U5SjJacGJHd25JSFpoYkhWbGN6MG5JMk5rTkRVek1Uc2pNVEF5TWpOa095TmpaRFExTXpFbklHUjFjajBuT0hNbklISmxjR1ZoZEVOdmRXNTBQU2RwYm1SbFptbHVhWFJsSnk4K1BDOXdZWFJvUGp4d1lYUm9JR1E5SjAweE16TXVNaUEzT0M0NWJEZ3VOaTB4Tmk0M1ZqSTRMamRqTFM0eExTNHpMVGd1TmlBeE15NHlMVGd1TnlBeE15NHhKejQ4WVc1cGJXRjBaU0JoZEhSeWFXSjFkR1ZPWVcxbFBTZG1hV3hzSnlCMllXeDFaWE05SnlObE1UUmxNemc3SXpGbU16RTJNVHNqWlRFMFpUTTRKeUJrZFhJOUp6aHpKeUJ5WlhCbFlYUkRiM1Z1ZEQwbmFXNWtaV1pwYm1sMFpTY3ZQand2Y0dGMGFENDhkR1Y0ZENCMGNtRnVjMlp2Y20wOUozUnlZVzV6YkdGMFpTZ3hNak1nTVRBMUtTY2dabWxzYkQwbkl6RXhNamswWWljZ1ptOXVkQzFtWVcxcGJIazlKeUpEYjNWeWFXVnlJRTVsZHlJbklHWnZiblF0ZDJWcFoyaDBQU2RpYjJ4a0p5Qm1iMjUwTFhOcGVtVTlKek0wSno0OGRITndZVzRnZUQwbk1DY2dlVDBuTUNjK1NVeE1TVTVKUEM5MGMzQmhiajQ4ZEhOd1lXNGdlRDBuTUNjZ2VUMG5NelluUGtKTVQwTkxRMGhCU1U0OEwzUnpjR0Z1UGp3dmRHVjRkRDQ4TDNOMlp6ND0ifQ=="
        );
    }

    function test_uri() public {
        uint256 id = 1;
        uint256 amount = 100;
        bytes memory data = bytes("");
        IlliniBlockchainSP22Token.TokenMetadata memory meta = IlliniBlockchainSP22Token
            .TokenMetadata({
                year: 2022,
                termId: 1 // Spring
            });
        vm.prank(owner);
        token.mint(owner, id, amount, meta, data);

        assertEq(
            token.uri(id),
            "data:application/json;base64,eyJuYW1lIjoiSWxsaW5pQmxvY2tjaGFpbiBTcHJpbmcgMjAyMiBNZW1iZXIiLCJkZXNjcmlwdGlvbiI6IklsbGluaUJsb2NrY2hhaW4gTWVtYmVyc2hpcCIsImltYWdlIjogImRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEhOMlp5QjNhV1IwYUQwbk16VXdKeUJvWldsbmFIUTlKekl3TUNjZ2VHMXNibk05SjJoMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZjM1puSnlCMmFXVjNRbTk0UFNjd0lEQWdNelV3SURJd01DY2djM1I1YkdVOUoySmhZMnRuY205MWJtUXRZMjlzYjNJNmQyaHBkR1VuUGp4a1pXWnpQanh6ZEhsc1pUNHVZWHRtYVd4c09tNXZibVU3YzNSeWIydGxPaU15TXpGbU1qQTdjM1J5YjJ0bExYZHBaSFJvT2pKd2VIMHVZbnRtYVd4c09pTm1abVk3Wm05dWRDMW1ZVzFwYkhrNkowTnZkWEpwWlhJZ1RtVjNKeXh0YjI1dmMzQmhZMlU3Wm05dWRDMXphWHBsT2pFNGNIaDlQQzl6ZEhsc1pUNDhMMlJsWm5NK1BIQmhkR2dnWTJ4aGMzTTlKMkVuSUdROUowMDFOaTR6SURnMFl6SXVNaTAzSURNNExqUXRNVGN1TkNBME1DMHhOUzR6VFRFd05TNDJJRGM0TGpOak1TNHhJREV1TlMweE9DNHhJRE16TGpZdE1qUXVPQ0F6TkUweE56RXVOU0F6TUM0Mll5MHhMamdnT1M0ekxUSTVMamdnTWpJdU5pMHpNU0F4T1M0M1RURXhOQzQwSURJNExqWmpMUzQyTFRFdU9TQXpNUzQxTFRFNExqWWdNemd1TkMweE5TNHlUVFUyTGpJZ01UTXpMamhqTVM0eklERXVNeTB5TUM0NElESTVMall0TWpndU5TQXpNRTAxTGpFZ01UTTVMamRqTVM0M0xUa3VNU0F6TUMweU1pNDNJRE14TGpNdE1Ua3VPU2N2UGp4d1lYUm9JR1E5SjAwM015QXhNelF1TW5NdE16Y3VOQzR5TFRNM0xqTWdNR013SURBdExqSXRNemN1TkNBd0xUTTNMalFnTUNBd0lETTNMalF0TGpJZ016Y3VNeUF3SURBZ01DQXVNaUF6Tnk0MElEQWdNemN1TkhvblBqeGhibWx0WVhSbElHRjBkSEpwWW5WMFpVNWhiV1U5SjJacGJHd25JSFpoYkhWbGN6MG5JekV3TWpJelpEc2pZMlEwTlRNeE95TXhNREl5TTJRbklHUjFjajBuT0hNbklISmxjR1ZoZEVOdmRXNTBQU2RwYm1SbFptbHVhWFJsSnk4K1BDOXdZWFJvUGp4d1lYUm9JR1E5SjAwM015QTVOaTQyWXkwdU15MHVOQ0F4TUM0MExURXpMak1nT0M0MUxURXpMak10TGpNdU1pMHpOaTQ0TFM0M0xUTTNMUzR5YkMwNExqY2dNVE11TkdNdU1pNDRKejQ4WVc1cGJXRjBaU0JoZEhSeWFXSjFkR1ZPWVcxbFBTZG1hV3hzSnlCMllXeDFaWE05SnlNeFpUUTFOMkk3STJVNE56ZzJOenNqTVdVME5UZGlKeUJrZFhJOUp6aHpKeUJ5WlhCbFlYUkRiM1Z1ZEQwbmFXNWtaV1pwYm1sMFpTY3ZQand2Y0dGMGFENDhjR0YwYUNCa1BTZE5Oek11TWlBeE16TXVPR3c0TGpZdE1UWXVOMVk0TXk0Mll5MHVNUzB1TXkwNExqWWdNVE11TWkwNExqY2dNVE11TVNjK1BHRnVhVzFoZEdVZ1lYUjBjbWxpZFhSbFRtRnRaVDBuWm1sc2JDY2dkbUZzZFdWelBTY2pNV1l6TVRZeE95TmxNVFJsTXpnN0l6Rm1NekUyTVNjZ1pIVnlQU2M0Y3ljZ2NtVndaV0YwUTI5MWJuUTlKMmx1WkdWbWFXNXBkR1VuTHo0OEwzQmhkR2crUEhCaGRHZ2daRDBuVFRFek15NHhJRFF4TGpaakxTNHpMUzQwSURFd0xqUXRNVE11TXlBNExqVXRNVE11TXkwdU15NHlMVE0yTGpndExqY3RNemN0TGpKc0xUZ3VOeUF4TXk0MFl5NHlMamduUGp4aGJtbHRZWFJsSUdGMGRISnBZblYwWlU1aGJXVTlKMlpwYkd3bklIWmhiSFZsY3owbkkyVTROemcyTnpzak1XVTBOVGRpT3lObE9EYzROamNuSUdSMWNqMG5PSE1uSUhKbGNHVmhkRU52ZFc1MFBTZHBibVJsWm1sdWFYUmxKeTgrUEM5d1lYUm9Qanh3WVhSb0lHUTlKMDB4TXpNZ056a3VNbk10TXpjdU5DNHlMVE0zTGpNZ01HTXdJREF0TGpJdE16Y3VOQ0F3TFRNM0xqUWdNQ0F3SURNM0xqUXRMaklnTXpjdU15QXdJREFnTUNBdU1pQXpOeTQwSURBZ016Y3VOSG9uUGp4aGJtbHRZWFJsSUdGMGRISnBZblYwWlU1aGJXVTlKMlpwYkd3bklIWmhiSFZsY3owbkkyTmtORFV6TVRzak1UQXlNak5rT3lOalpEUTFNekVuSUdSMWNqMG5PSE1uSUhKbGNHVmhkRU52ZFc1MFBTZHBibVJsWm1sdWFYUmxKeTgrUEM5d1lYUm9Qanh3WVhSb0lHUTlKMDB4TXpNdU1pQTNPQzQ1YkRndU5pMHhOaTQzVmpJNExqZGpMUzR4TFM0ekxUZ3VOaUF4TXk0eUxUZ3VOeUF4TXk0eEp6NDhZVzVwYldGMFpTQmhkSFJ5YVdKMWRHVk9ZVzFsUFNkbWFXeHNKeUIyWVd4MVpYTTlKeU5sTVRSbE16ZzdJekZtTXpFMk1Uc2paVEUwWlRNNEp5QmtkWEk5Snpoekp5QnlaWEJsWVhSRGIzVnVkRDBuYVc1a1pXWnBibWwwWlNjdlBqd3ZjR0YwYUQ0OGRHVjRkQ0IwY21GdWMyWnZjbTA5SjNSeVlXNXpiR0YwWlNneE1qTWdNVEExS1NjZ1ptbHNiRDBuSXpFeE1qazBZaWNnWm05dWRDMW1ZVzFwYkhrOUp5SkRiM1Z5YVdWeUlFNWxkeUluSUdadmJuUXRkMlZwWjJoMFBTZGliMnhrSnlCbWIyNTBMWE5wZW1VOUp6TTBKejQ4ZEhOd1lXNGdlRDBuTUNjZ2VUMG5NQ2MrU1V4TVNVNUpQQzkwYzNCaGJqNDhkSE53WVc0Z2VEMG5NQ2NnZVQwbk16WW5Qa0pNVDBOTFEwaEJTVTQ4TDNSemNHRnVQand2ZEdWNGRENDhjbVZqZENCamJHRnpjejBuWVNjZ2VEMG5NU2NnZVQwbk1TY2dkMmxrZEdnOUp6TTBPQ2NnYUdWcFoyaDBQU2N4T1RnbklISjRQU2M1SnlCeWVUMG5PU2N2UGp4bklIUnlZVzV6Wm05eWJUMG5kSEpoYm5Oc1lYUmxLREkwTUNBeE5qVXBKejQ4Y21WamRDQjNhV1IwYUQwbk1UQXdjSGduSUdobGFXZG9kRDBuTWpad2VDY2djbmc5Snpod2VDY2djbms5Snpod2VDY2dabWxzYkQwbkl6RXhNamswWWljdlBqeDBaWGgwSUdOc1lYTnpQU2RpSno0OGRITndZVzRnZUQwbk1qQW5JSGs5SnpFM0p6NU5aVzFpWlhJOEwzUnpjR0Z1UGp3dmRHVjRkRDQ4TDJjK1BHY2dkSEpoYm5ObWIzSnRQU0owY21GdWMyeGhkR1VvTWpBd0lERXdLU0krUEhKbFkzUWdkMmxrZEdnOUlqRTBNSEI0SWlCb1pXbG5hSFE5SWpJMmNIZ2lJSEo0UFNJNGNIZ2lJSEo1UFNJNGNIZ2lJR1pwYkd3OUlpTmxOelJpTWpZaUlDOCtQSFJsZUhRZ1kyeGhjM005SW1JaVBqeDBjM0JoYmlCNFBTSXhNQ0lnZVQwaU1UY2lQbE53Y21sdVp5QXlNREl5UEM5MGMzQmhiajQ4TDNSbGVIUStQQzluUGp3dmMzWm5QZz09In0="
        );
    }
}

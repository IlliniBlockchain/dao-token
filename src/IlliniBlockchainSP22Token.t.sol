// SPDX-License-Identifier: GPL-3.0-or-later
pragma solidity ^0.8.6;

import "ds-test/test.sol";
import "./test/Vm.sol";

import "./IlliniBlockchainSP22Token.sol";

contract IlliniBlockchainSP22TokenTest is DSTest {
    Vm vm = Vm(HEVM_ADDRESS);
    IlliniBlockchainSP22Token token;
    address owner = address(0x01);

    function setUp() public {
        token = new IlliniBlockchainSP22Token(owner);
    }

    function testFail_basic_sanity() public {
        assertTrue(false);
    }

    function test_basic_sanity() public {
        assertTrue(true);
    }

    function test_mint() public {
        uint256 id = 1;
        uint256 amount = 100;
        bytes memory data = bytes("");
        IlliniBlockchainSP22Token.TokenMetadata memory meta = IlliniBlockchainSP22Token
            .TokenMetadata({
                year: 2022,
                termId: 1 // Spring
            });
        vm.prank(owner);
        token.mint(owner, id, amount, meta, data);

        assertEq(token.balanceOf(owner, id), amount);

        (uint16 year, uint8 termId) = token.tokenMetadata(id);
        assertEq(year, meta.year);
        assertEq(termId, meta.termId);
    }

    function test_contractURI() public {
        assertEq(
            token.contractURI(),
            "data:application/json;base64,eyJuYW1lIjoiSWxsaW5pQmxvY2tjaGFpbiIsImRlc2NyaXB0aW9uOiJTdHVkZW50IG9yZ2FuaXphdGlvbiBhdCB0aGUgVW5pdmVyc2l0eSBvZiBJbGxpbm9pcyBhdCBVcmJhbmEtQ2hhbXBhaWduLiIsImV4dGVybmFsX2xpbmsiOiAiaHR0cHM6Ly9pbGxpbmlibG9ja2NoYWluLmNvbS8iLCJpbWFnZSI6ICJkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUIzYVdSMGFEMG5NelV3SnlCb1pXbG5hSFE5SnpJd01DY2dlRzFzYm5NOUoyaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREF2YzNabkp5QjJhV1YzUW05NFBTY3dJREFnTXpVd0lESXdNQ2MrUEdSbFpuTStQSE4wZVd4bFBpNWhlMlpwYkd3NmJtOXVaVHR6ZEhKdmEyVTZJekl6TVdZeU1EdHpkSEp2YTJVdGQybGtkR2c2TW5CNGZTNWllMlpwYkd3NkkyWm1aanRtYjI1MExXWmhiV2xzZVRvblEyOTFjbWxsY2lCT1pYY25MRzF2Ym05emNHRmpaVHRtYjI1MExYTnBlbVU2TVRod2VIMDhMM04wZVd4bFBqd3ZaR1ZtY3o0OGNHRjBhQ0JqYkdGemN6MG5ZU2NnWkQwblRUVTJMak1nT0RSak1pNHlMVGNnTXpndU5DMHhOeTQwSURRd0xURTFMak5OTVRBMUxqWWdOemd1TTJNeExqRWdNUzQxTFRFNExqRWdNek11TmkweU5DNDRJRE0wVFRFM01TNDFJRE13TGpaakxURXVPQ0E1TGpNdE1qa3VPQ0F5TWk0MkxUTXhJREU1TGpkTk1URTBMalFnTWpndU5tTXRMall0TVM0NUlETXhMalV0TVRndU5pQXpPQzQwTFRFMUxqSk5OVFl1TWlBeE16TXVPR014TGpNZ01TNHpMVEl3TGpnZ01qa3VOaTB5T0M0MUlETXdUVFV1TVNBeE16a3VOMk14TGpjdE9TNHhJRE13TFRJeUxqY2dNekV1TXkweE9TNDVKeTgrUEhCaGRHZ2daRDBuVFRjeklERXpOQzR5Y3kwek55NDBMakl0TXpjdU15QXdZekFnTUMwdU1pMHpOeTQwSURBdE16Y3VOQ0F3SURBZ016Y3VOQzB1TWlBek55NHpJREFnTUNBd0lDNHlJRE0zTGpRZ01DQXpOeTQwZWljK1BHRnVhVzFoZEdVZ1lYUjBjbWxpZFhSbFRtRnRaVDBuWm1sc2JDY2dkbUZzZFdWelBTY2pNVEF5TWpOa095TmpaRFExTXpFN0l6RXdNakl6WkNjZ1pIVnlQU2M0Y3ljZ2NtVndaV0YwUTI5MWJuUTlKMmx1WkdWbWFXNXBkR1VuTHo0OEwzQmhkR2crUEhCaGRHZ2daRDBuVFRjeklEazJMalpqTFM0ekxTNDBJREV3TGpRdE1UTXVNeUE0TGpVdE1UTXVNeTB1TXk0eUxUTTJMamd0TGpjdE16Y3RMakpzTFRndU55QXhNeTQwWXk0eUxqZ25QanhoYm1sdFlYUmxJR0YwZEhKcFluVjBaVTVoYldVOUoyWnBiR3duSUhaaGJIVmxjejBuSXpGbE5EVTNZanNqWlRnM09EWTNPeU14WlRRMU4ySW5JR1IxY2owbk9ITW5JSEpsY0dWaGRFTnZkVzUwUFNkcGJtUmxabWx1YVhSbEp5OCtQQzl3WVhSb1BqeHdZWFJvSUdROUowMDNNeTR5SURFek15NDRiRGd1TmkweE5pNDNWamd6TGpaakxTNHhMUzR6TFRndU5pQXhNeTR5TFRndU55QXhNeTR4Sno0OFlXNXBiV0YwWlNCaGRIUnlhV0oxZEdWT1lXMWxQU2RtYVd4c0p5QjJZV3gxWlhNOUp5TXhaak14TmpFN0kyVXhOR1V6T0Rzak1XWXpNVFl4SnlCa2RYSTlKemh6SnlCeVpYQmxZWFJEYjNWdWREMG5hVzVrWldacGJtbDBaU2N2UGp3dmNHRjBhRDQ4Y0dGMGFDQmtQU2ROTVRNekxqRWdOREV1Tm1NdExqTXRMalFnTVRBdU5DMHhNeTR6SURndU5TMHhNeTR6TFM0ekxqSXRNell1T0MwdU55MHpOeTB1TW13dE9DNDNJREV6TGpSakxqSXVPQ2MrUEdGdWFXMWhkR1VnWVhSMGNtbGlkWFJsVG1GdFpUMG5abWxzYkNjZ2RtRnNkV1Z6UFNjalpUZzNPRFkzT3lNeFpUUTFOMkk3STJVNE56ZzJOeWNnWkhWeVBTYzRjeWNnY21Wd1pXRjBRMjkxYm5ROUoybHVaR1ZtYVc1cGRHVW5MejQ4TDNCaGRHZytQSEJoZEdnZ1pEMG5UVEV6TXlBM09TNHljeTB6Tnk0MExqSXRNemN1TXlBd1l6QWdNQzB1TWkwek55NDBJREF0TXpjdU5DQXdJREFnTXpjdU5DMHVNaUF6Tnk0eklEQWdNQ0F3SUM0eUlETTNMalFnTUNBek55NDBlaWMrUEdGdWFXMWhkR1VnWVhSMGNtbGlkWFJsVG1GdFpUMG5abWxzYkNjZ2RtRnNkV1Z6UFNjalkyUTBOVE14T3lNeE1ESXlNMlE3STJOa05EVXpNU2NnWkhWeVBTYzRjeWNnY21Wd1pXRjBRMjkxYm5ROUoybHVaR1ZtYVc1cGRHVW5MejQ4TDNCaGRHZytQSEJoZEdnZ1pEMG5UVEV6TXk0eUlEYzRMamxzT0M0MkxURTJMamRXTWpndU4yTXRMakV0TGpNdE9DNDJJREV6TGpJdE9DNDNJREV6TGpFblBqeGhibWx0WVhSbElHRjBkSEpwWW5WMFpVNWhiV1U5SjJacGJHd25JSFpoYkhWbGN6MG5JMlV4TkdVek9Ec2pNV1l6TVRZeE95TmxNVFJsTXpnbklHUjFjajBuT0hNbklISmxjR1ZoZEVOdmRXNTBQU2RwYm1SbFptbHVhWFJsSnk4K1BDOXdZWFJvUGp4MFpYaDBJSFJ5WVc1elptOXliVDBuZEhKaGJuTnNZWFJsS0RFeU15QXhNRFVwSnlCbWFXeHNQU2NqTVRFeU9UUmlKeUJtYjI1MExXWmhiV2xzZVQwbklrTnZkWEpwWlhJZ1RtVjNJaWNnWm05dWRDMTNaV2xuYUhROUoySnZiR1FuSUdadmJuUXRjMmw2WlQwbk16UW5QangwYzNCaGJpQjRQU2N3SnlCNVBTY3dKejVKVEV4SlRrazhMM1J6Y0dGdVBqeDBjM0JoYmlCNFBTY3dKeUI1UFNjek5pYytRa3hQUTB0RFNFRkpUand2ZEhOd1lXNCtQQzkwWlhoMFBqd3ZjM1puUGc9PSJ9"
        );
    }

    function test_uri() public {
        uint256 id = 1;
        uint256 amount = 100;
        bytes memory data = bytes("");
        IlliniBlockchainSP22Token.TokenMetadata memory meta = IlliniBlockchainSP22Token
            .TokenMetadata({
                year: 2022,
                termId: 1 // Spring
            });
        vm.prank(owner);
        token.mint(owner, id, amount, meta, data);

        assertEq(
            token.uri(id),
            "data:application/json;base64,eyJuYW1lIjoiSWxsaW5pQmxvY2tjaGFpbiBTcHJpbmcgMjAyMiBNZW1iZXIiLCJkZXNjcmlwdGlvbjoiSWxsaW5pQmxvY2tjaGFpbiBNZW1iZXJzaGlwIiwiaW1hZ2UiOiAiZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQSE4yWnlCM2FXUjBhRDBuTXpVd0p5Qm9aV2xuYUhROUp6SXdNQ2NnZUcxc2JuTTlKMmgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5KeUIyYVdWM1FtOTRQU2N3SURBZ016VXdJREl3TUNjK1BHUmxabk0rUEhOMGVXeGxQaTVoZTJacGJHdzZibTl1WlR0emRISnZhMlU2SXpJek1XWXlNRHR6ZEhKdmEyVXRkMmxrZEdnNk1uQjRmUzVpZTJacGJHdzZJMlptWmp0bWIyNTBMV1poYldsc2VUb25RMjkxY21sbGNpQk9aWGNuTEcxdmJtOXpjR0ZqWlR0bWIyNTBMWE5wZW1VNk1UaHdlSDA4TDNOMGVXeGxQand2WkdWbWN6NDhjR0YwYUNCamJHRnpjejBuWVNjZ1pEMG5UVFUyTGpNZ09EUmpNaTR5TFRjZ016Z3VOQzB4Tnk0MElEUXdMVEUxTGpOTk1UQTFMallnTnpndU0yTXhMakVnTVM0MUxURTRMakVnTXpNdU5pMHlOQzQ0SURNMFRURTNNUzQxSURNd0xqWmpMVEV1T0NBNUxqTXRNamt1T0NBeU1pNDJMVE14SURFNUxqZE5NVEUwTGpRZ01qZ3VObU10TGpZdE1TNDVJRE14TGpVdE1UZ3VOaUF6T0M0MExURTFMakpOTlRZdU1pQXhNek11T0dNeExqTWdNUzR6TFRJd0xqZ2dNamt1TmkweU9DNDFJRE13VFRVdU1TQXhNemt1TjJNeExqY3RPUzR4SURNd0xUSXlMamNnTXpFdU15MHhPUzQ1Snk4K1BIQmhkR2dnWkQwblRUY3pJREV6TkM0eWN5MHpOeTQwTGpJdE16Y3VNeUF3WXpBZ01DMHVNaTB6Tnk0MElEQXRNemN1TkNBd0lEQWdNemN1TkMwdU1pQXpOeTR6SURBZ01DQXdJQzR5SURNM0xqUWdNQ0F6Tnk0MGVpYytQR0Z1YVcxaGRHVWdZWFIwY21saWRYUmxUbUZ0WlQwblptbHNiQ2NnZG1Gc2RXVnpQU2NqTVRBeU1qTmtPeU5qWkRRMU16RTdJekV3TWpJelpDY2daSFZ5UFNjNGN5Y2djbVZ3WldGMFEyOTFiblE5SjJsdVpHVm1hVzVwZEdVbkx6NDhMM0JoZEdnK1BIQmhkR2dnWkQwblRUY3pJRGsyTGpaakxTNHpMUzQwSURFd0xqUXRNVE11TXlBNExqVXRNVE11TXkwdU15NHlMVE0yTGpndExqY3RNemN0TGpKc0xUZ3VOeUF4TXk0MFl5NHlMamduUGp4aGJtbHRZWFJsSUdGMGRISnBZblYwWlU1aGJXVTlKMlpwYkd3bklIWmhiSFZsY3owbkl6RmxORFUzWWpzalpUZzNPRFkzT3lNeFpUUTFOMkluSUdSMWNqMG5PSE1uSUhKbGNHVmhkRU52ZFc1MFBTZHBibVJsWm1sdWFYUmxKeTgrUEM5d1lYUm9Qanh3WVhSb0lHUTlKMDAzTXk0eUlERXpNeTQ0YkRndU5pMHhOaTQzVmpnekxqWmpMUzR4TFM0ekxUZ3VOaUF4TXk0eUxUZ3VOeUF4TXk0eEp6NDhZVzVwYldGMFpTQmhkSFJ5YVdKMWRHVk9ZVzFsUFNkbWFXeHNKeUIyWVd4MVpYTTlKeU14WmpNeE5qRTdJMlV4TkdVek9Ec2pNV1l6TVRZeEp5QmtkWEk5Snpoekp5QnlaWEJsWVhSRGIzVnVkRDBuYVc1a1pXWnBibWwwWlNjdlBqd3ZjR0YwYUQ0OGNHRjBhQ0JrUFNkTk1UTXpMakVnTkRFdU5tTXRMak10TGpRZ01UQXVOQzB4TXk0eklEZ3VOUzB4TXk0ekxTNHpMakl0TXpZdU9DMHVOeTB6TnkwdU1td3RPQzQzSURFekxqUmpMakl1T0NjK1BHRnVhVzFoZEdVZ1lYUjBjbWxpZFhSbFRtRnRaVDBuWm1sc2JDY2dkbUZzZFdWelBTY2paVGczT0RZM095TXhaVFExTjJJN0kyVTROemcyTnljZ1pIVnlQU2M0Y3ljZ2NtVndaV0YwUTI5MWJuUTlKMmx1WkdWbWFXNXBkR1VuTHo0OEwzQmhkR2crUEhCaGRHZ2daRDBuVFRFek15QTNPUzR5Y3kwek55NDBMakl0TXpjdU15QXdZekFnTUMwdU1pMHpOeTQwSURBdE16Y3VOQ0F3SURBZ016Y3VOQzB1TWlBek55NHpJREFnTUNBd0lDNHlJRE0zTGpRZ01DQXpOeTQwZWljK1BHRnVhVzFoZEdVZ1lYUjBjbWxpZFhSbFRtRnRaVDBuWm1sc2JDY2dkbUZzZFdWelBTY2pZMlEwTlRNeE95TXhNREl5TTJRN0kyTmtORFV6TVNjZ1pIVnlQU2M0Y3ljZ2NtVndaV0YwUTI5MWJuUTlKMmx1WkdWbWFXNXBkR1VuTHo0OEwzQmhkR2crUEhCaGRHZ2daRDBuVFRFek15NHlJRGM0TGpsc09DNDJMVEUyTGpkV01qZ3VOMk10TGpFdExqTXRPQzQySURFekxqSXRPQzQzSURFekxqRW5QanhoYm1sdFlYUmxJR0YwZEhKcFluVjBaVTVoYldVOUoyWnBiR3duSUhaaGJIVmxjejBuSTJVeE5HVXpPRHNqTVdZek1UWXhPeU5sTVRSbE16Z25JR1IxY2owbk9ITW5JSEpsY0dWaGRFTnZkVzUwUFNkcGJtUmxabWx1YVhSbEp5OCtQQzl3WVhSb1BqeDBaWGgwSUhSeVlXNXpabTl5YlQwbmRISmhibk5zWVhSbEtERXlNeUF4TURVcEp5Qm1hV3hzUFNjak1URXlPVFJpSnlCbWIyNTBMV1poYldsc2VUMG5Ja052ZFhKcFpYSWdUbVYzSWljZ1ptOXVkQzEzWldsbmFIUTlKMkp2YkdRbklHWnZiblF0YzJsNlpUMG5NelFuUGp4MGMzQmhiaUI0UFNjd0p5QjVQU2N3Sno1SlRFeEpUa2s4TDNSemNHRnVQangwYzNCaGJpQjRQU2N3SnlCNVBTY3pOaWMrUWt4UFEwdERTRUZKVGp3dmRITndZVzQrUEM5MFpYaDBQanh5WldOMElHTnNZWE56UFNkaEp5QjRQU2N4SnlCNVBTY3hKeUIzYVdSMGFEMG5NelE0SnlCb1pXbG5hSFE5SnpFNU9DY2djbmc5SnprbklISjVQU2M1Snk4K1BHY2dkSEpoYm5ObWIzSnRQU2QwY21GdWMyeGhkR1VvTWpRd0lERTJOU2tuUGp4eVpXTjBJSGRwWkhSb1BTY3hNREJ3ZUNjZ2FHVnBaMmgwUFNjeU5uQjRKeUJ5ZUQwbk9IQjRKeUJ5ZVQwbk9IQjRKeUJtYVd4c1BTY2pNVEV5T1RSaUp5OCtQSFJsZUhRZ1kyeGhjM005SjJJblBqeDBjM0JoYmlCNFBTY3lNQ2NnZVQwbk1UY25QazFsYldKbGNqd3ZkSE53WVc0K1BDOTBaWGgwUGp3dlp6NDhaeUIwY21GdWMyWnZjbTA5SW5SeVlXNXpiR0YwWlNneU1EQWdNVEFwSWo0OGNtVmpkQ0IzYVdSMGFEMGlNVFF3Y0hnaUlHaGxhV2RvZEQwaU1qWndlQ0lnY25nOUlqaHdlQ0lnY25rOUlqaHdlQ0lnWm1sc2JEMGlJMlUzTkdJeU5pSWdMejQ4ZEdWNGRDQmpiR0Z6Y3owaVlpSStQSFJ6Y0dGdUlIZzlJakV3SWlCNVBTSXhOeUkrVTNCeWFXNW5JREl3TWpJOEwzUnpjR0Z1UGp3dmRHVjRkRDQ4TDJjK1BDOXpkbWMrIn0="
        );
    }
}
